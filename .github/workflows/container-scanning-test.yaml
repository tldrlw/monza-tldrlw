name: container-scanning-test

on:
  push:
    branches:
      - dev
    paths:
      - my-app/**
      - .github/workflows/**

# test

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: us-east-1
  ECR_REPO: monza-tldrlw
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  # ^ key needs _ID at the end for aws-actions/amazon-ecr-login@v2 to work
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # ^ these are not directly referenced (e.g., as ${{ secrets.AWS_SECRET_ACCESS_KEY }}) anywhere below, but need to be set as environment variables for the step 'aws-actions/amazon-ecr-login@v2' to work
  COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID }}
  COGNITO_USER_POOL_CLIENT_ID: ${{ secrets.COGNITO_USER_POOL_CLIENT_ID }}

permissions:
  actions: write
  contents: read
  # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/controlling-permissions-for-github_token

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: set local timezone and get the current time
        run: |
          sudo apt-get install -y tzdata
          sudo ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
          sudo dpkg-reconfigure -f noninteractive tzdata
          echo "CURRENT_TIME=$(date '+%B %d, %Y %-I:%M %p')" >> $GITHUB_ENV

      - name: log in to AWS ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v2
        # https://github.com/aws-actions/amazon-ecr-login
        with:
          mask-password: "false"

      - name: get shortened commit SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
        # was tagging images with full sha using ${{ github.sha }}, but this shortens it to what you see in the github UI, e.g., d996364

      - name: build the Docker image
        working-directory: ./my-app
        run: |
          docker build --no-cache --build-arg COGNITO_USER_POOL_ID="${{ env.COGNITO_USER_POOL_ID }}" \
                       --build-arg COGNITO_USER_POOL_CLIENT_ID="${{ env.COGNITO_USER_POOL_CLIENT_ID }}" \
                       --build-arg BUILD_TIME="${{ env.CURRENT_TIME }}" \
                       --build-arg IMAGE="${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.SHORT_SHA }}" \
                       -t "${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.SHORT_SHA }}" .

      - name: Run Snyk to check Docker images for vulnerabilities
        uses: snyk/actions/docker@master
        # https://github.com/snyk/actions/tree/master/docker
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          # https://docs.snyk.io/snyk-api/rest-api/authentication-for-api/authenticate-for-the-api
        with:
          image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}:${{ env.SHORT_SHA }}
          args: --severity-threshold=high
