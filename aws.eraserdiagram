cloud-architecture-diagram
// need to keep this (but works without it in browser?): https://docs.eraser.io/docs/using-the-vs-code-extension#diagram-syntax

// groups and nodes
Users [icon: users]
Route 53 [icon: aws-route-53]
// lambda functions
VPC Subnets (Private) [icon: aws-vpc] {
  Security Group [icon: aws-security-group] {
    GetConstructors [icon: aws-lambda, label: get-constructors]
    GetDrivers [icon: aws-lambda, label: get-drivers]
    GetInsights [icon: aws-lambda, label: get-insights]
    GetInsight [icon: aws-lambda, label: get-insight]
    PostInsight [icon: aws-lambda, label: post-insight]
    GetResults [icon: aws-lambda, label: get-results]
    PostResult [icon: aws-lambda, label: post-result]
  }
  VPC Endpoint (DyDB) [icon: aws-vpc]
}
VPC Subnets (Public) [icon: aws-vpc] {
  Security Group (APIG) [icon: aws-security-group] {
    API Gateway [icon: aws-api-gateway]
    VPC Endpoint (APIG) [icon: aws-vpc]
  }
}
PostImage [icon: aws-lambda, label: post-image-func-url]
ConstructorsUpdate [icon: aws-lambda, label: constructors-update]
DriversUpdate [icon: aws-lambda, label: drivers-update]
GetConstructorsFuncURL [icon: aws-lambda, label: get-constructors-func-url]
GetDriversFuncURL [icon: aws-lambda, label: get-drivers-func-url]
// dydb tables
Insights [icon: aws-dynamodb, label: insights]
Drivers [icon: aws-dynamodb, label: drivers]
Constructors [icon: aws-dynamodb, label: constructors]
Results [icon: aws-dynamodb, label: results]
// s3 buckets
Images [icon: aws-simple-storage-service]
// vpc, ecr and ecs
ECR [icon: aws-elastic-container-registry]
VPC Subnets (Public) [icon: aws-vpc] {
  ELB [icon: aws-elastic-load-balancing]
  ECS Cluster [icon: aws-elastic-container-service] {
    ECS Service [icon: aws-elastic-container-service] {
      ECS Task [icon: aws-elastic-container-service]
      NextJS App [icon: next]
    }
  }
}
// cognito and ssm
Cognito [icon: aws-cognito]
SSM [icon: aws-systems-manager]
// github
Github [icon: github]
Github ActionDev [icon: github-actions, label: github-action] {
  Docker BuildDev [icon: docker, label: build]
  Synk Image Vulnerability ScanDev [icon: alert-triangle, label: synk-image-vuln-scan]
}
Github ActionPrd [icon: github-actions, label: github-action] {
  Docker BuildPrd [icon: docker, label: build]
  Synk Image Vulnerability ScanPrd [icon: alert-triangle, label: synk-image-vuln-scan]
}
Github ActionTF [icon: github-actions, label: github-action] {
  Terraform [icon: terraform]
}
MergeDev [icon: git-merge, label: merge-to-dev]
MergePrd [icon: git-merge, label: merge-to-prd]

// connections
Users > Route 53 > ELB > ECS Service

ECS Service > PostImage

ECS Service > VPC Endpoint (APIG) > API Gateway > GetInsights > VPC Endpoint (DyDB) > Insights
ECS Service > VPC Endpoint (APIG) > API Gateway > GetInsight > VPC Endpoint (DyDB) > Insights
ECS Service > VPC Endpoint (APIG) > API Gateway > PostInsight > VPC Endpoint (DyDB) > Insights
ECS Service > VPC Endpoint (APIG) > API Gateway > GetConstructors > VPC Endpoint (DyDB) > Constructors
ECS Service > VPC Endpoint (APIG) > API Gateway > GetDrivers > VPC Endpoint (DyDB) > Drivers
ECS Service > VPC Endpoint (APIG) > API Gateway > GetResults > VPC Endpoint (DyDB) > Results
ECS Service > VPC Endpoint (APIG) > API Gateway > PostResult > VPC Endpoint (DyDB) > Results

PostImage > Images
DriversUpdate > GetDriversFuncURL
ConstructorsUpdate > GetConstructorsFuncURL
ECS Service > Images
// internal lambda functions
Results > DriversUpdate: stream trigger
Results > ConstructorsUpdate: stream trigger
DriversUpdate > Drivers: write updated standings
ConstructorsUpdate > Constructors: write updated standings
// nextjs
ECS Task < NextJS App
ECS Service > ECR
ECS Service > Cognito
Cognito > SSM: credentials stored using local-only script
// github
Github > MergeDev
MergeDev > Docker BuildDev
Docker BuildDev > Synk Image Vulnerability ScanDev
Github > MergePrd
MergePrd > Docker BuildPrd
Docker BuildPrd > Synk Image Vulnerability ScanPrd
Synk Image Vulnerability ScanPrd > ECR: push NextJS Docker image
Github ActionPrd > Github ActionTF: triggers AFTER image pushed to ECR and passes image tag as TFVAR
